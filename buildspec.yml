version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
      docker: 20
    commands:
      - echo CodeBuild Pipeline start the process of building Image
      - echo Cloning the GitHub repository...
      - git clone https://github.com/MatveyGuralskiy/DribbleData.git
      - cd DribbleData
      - echo Retrieving parameters from SSM...
      - export AWS_DEFAULT_REGION=us-east-1
      - export APP_VERSION=V1.0
      - export SECRET_KEY=$(aws ssm get-parameter --name /dribble-data/SECRET_KEY --region $AWS_DEFAULT_REGION --query "Parameter.Value" --output text)
      - export DAX_ENDPOINT=$(aws ssm get-parameter --name /dribble-data/DAX_ENDPOINT --region $AWS_DEFAULT_REGION --query "Parameter.Value" --output text)
      - export SESSION_COOKIE_SECURE=$(aws ssm get-parameter --name /dribble-data/SESSION_COOKIE_SECURE --region $AWS_DEFAULT_REGION --query "Parameter.Value" --output text)
      - export SESSION_COOKIE_HTTPONLY=$(aws ssm get-parameter --name /dribble-data/SESSION_COOKIE_HTTPONLY --region $AWS_DEFAULT_REGION --query "Parameter.Value" --output text)
      - export SESSION_COOKIE_SAMESITE=$(aws ssm get-parameter --name /dribble-data/SESSION_COOKIE_SAMESITE --region $AWS_DEFAULT_REGION --query "Parameter.Value" --output text)
      - export REPOSITORY_URI=$(aws ssm get-parameter --name /dribble-data/REPOSITORY_URI --region $AWS_DEFAULT_REGION --query "Parameter.Value" --output text)

  pre_build:
    commands:      
      - echo Running unit tests...
      - pip install -r Application/requirements.txt
      - python -m unittest discover -s Application -p "*.py"
      
  build:
    commands:
      - echo Logging into Amazon ECR...
      - aws ecr-public get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo Building the Docker image...
      - cd Application
      - docker-compose build

  post_build:
    commands:
      - echo Tagging the Docker image...
      - docker tag dribble-data:$APP_VERSION $REPOSITORY_URI:$APP_VERSION
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$APP_VERSION